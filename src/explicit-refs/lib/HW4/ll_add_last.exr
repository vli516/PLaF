
(* Add Last exercise *)

let l1 = { head <= 0; length <= 0} (* 0 in head signals null *)
in letrec add_last_helper(nd) = proc (key) {
                 if number?(nd.next)
		 then nd.next <= { data <=key; next <= 0 }
	         else ((add_last_helper nd.next) key)
	      } 
in let add_last = proc (l) { proc (key) {
      begin
         if number?(l.head)
         then l.head <= { data <= key; next <= 0 }
         else ((add_last_helper l.head) key);
         l.length <= l.length + 1;
         l
      end
} }

in begin
     ((add_last l1) 2);
     ((add_last l1) 3);
     ((add_last l1) 4);
     debug(l1)  (* required inspect the list *)
   end